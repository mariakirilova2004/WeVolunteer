@model MineCausesQueryModel;

@{
    ViewData["Title"] = "Causes organized by you";
}

<section class="section-padding" id="section_3">
                <div class="container">
                    <div class="row md-4">

                        <div class="col-lg-12 col-12 text-center mb-4">
                            <h2>@ViewData["Title"]</h2>
                        </div>

                        <form class="custom-form subscribe-form" asp-controller="Cause" asp-action="Add" method="get">
            
                            <button type="submit" class="form-control">Add new Cause</button>

                        </form>

                        <form method="get">
                            <div class="row">
                                <div class="form-group col col-md-3 d-flex justify-content-between">
                                    <div class="form-group">
                                        <label asp-for="Category"></label>
                                        <select asp-for="Category" class="form-control">
                                            <option value="">All</option>
                                            @foreach (var category in Model.Categories)
                                            {
                                                <option value="@category">@category</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                        
                                <div class="form-group col-md-3">
                                    <label asp-for="SearchTerm"></label>
                                    <input asp-for="SearchTerm" class="form-control" placeholder="...">
                                </div>
                        
                                <div class="form-group col-md-3">
                                    <div class="form-group">
                                        <label asp-for="Sorting"></label>
                                        <select asp-for="Sorting" class="form-control">
                                            <option value="0">Newest</option>
                                            <option value="1">Latest</option>
                                            <option value="2">Active</option>
                                        </select>
                                    </div>
                                </div>
                        
                                <div class="form-group col-md-3">
                                    <div class="form-group md-4 p-2">
                                        <input type="submit" value="Search" class="custom-btn btn" />
                                    </div>
                                </div>
                            </div>
                        </form>
                        
                        @{
                            var previousPage = Model.CurrentPage - 1;
                            if (previousPage < 1)
                            {
                                previousPage = 1;
                            }
                        
                            var maxPage = Math.Ceiling((double)Model.TotalCausesCount /
                                AllCausesQueryModel.CausesPerPage);
                        }
                        
                        <div class="row md-4">
                            <div class="col-md-6 d-grid gap-2 d-mb-flex justify-content-md-start">
                                <a class="custom-btn btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                                   asp-controller="Cause"
                                   asp-action="All"
                                   asp-route-currentPage="@previousPage"
                                   asp-route-category="@Model.Category"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-sorting="@((int)Model.Sorting)"><<</a>
                            </div>
                        
                            @{
                                var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                !Model.Causes.Any();
                            }
                        
                            <div class="col-md-6 d-grid gap-2 d-mb-flex justify-content-md-end">
                                <a class="custom-btn btn 
                                   @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                                   asp-controller="Cause"
                                   asp-action="All"
                                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                                   asp-route-category="@Model.Category"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-sorting="@((int)Model.Sorting)">>></a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @if (!Model.Causes.Any())
                        {
                            <h2 class="text-center">No causes found by the given criteria!</h2>
                        }

                        @if (@Model.Causes == null)
                        {
                            <div class="col-lg-12 col-12 text-center mb-4">
                             <h3>Coming soon...</h3>
                            </div>
                        }
                        else
                        {
                            @foreach (var cause in @Model.Causes)
                            {
                              @await Html.PartialAsync("_CausePartial", @cause)
                            }
                        }
                    </div>
                </div>
            </section>
